@namespace VibeUI.Components
@inherits Base.ThemedComponentBase

<button type="button" 
        class="@CombinedClass @(Pressed ? "pressed" : "") @VariantClass @SizeClass" 
        @onclick="OnTogglePressed"
        disabled="@Disabled"
        aria-pressed="@Pressed"
        @attributes="AdditionalAttributes">
    @ChildContent
</button>

@code {
    /// <summary>
    /// Gets or sets the content of the toggle.
    /// </summary>
    [Parameter]
    public RenderFragment ChildContent { get; set; }

    /// <summary>
    /// Gets or sets whether the toggle is pressed.
    /// </summary>
    [Parameter]
    public bool Pressed { get; set; }

    /// <summary>
    /// Gets or sets whether the toggle is disabled.
    /// </summary>
    [Parameter]
    public bool Disabled { get; set; }

    /// <summary>
    /// Gets or sets the size of the toggle.
    /// </summary>
    [Parameter]
    public string Size { get; set; } = "default";

    /// <summary>
    /// Gets or sets the variant of the toggle.
    /// </summary>
    [Parameter]
    public string Variant { get; set; } = "default";

    /// <summary>
    /// Gets or sets the callback when the toggle state changes.
    /// </summary>
    [Parameter]
    public EventCallback<bool> PressedChanged { get; set; }

    /// <summary>
    /// Gets the component CSS class name.
    /// </summary>
    protected override string ComponentClass => "vibe-toggle";

    /// <summary>
    /// Gets the CSS class for the variant.
    /// </summary>
    private string VariantClass => $"toggle-{Variant}";

    /// <summary>
    /// Gets the CSS class for the size.
    /// </summary>
    private string SizeClass => $"toggle-{Size}";

    /// <summary>
    /// Handles the toggle press event.
    /// </summary>
    private async Task OnTogglePressed()
    {
        if (!Disabled)
        {
            Pressed = !Pressed;
            await PressedChanged.InvokeAsync(Pressed);
        }
    }
}
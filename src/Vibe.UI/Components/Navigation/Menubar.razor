@namespace Vibe.UI.Components
@inherits Base.ThemedComponentBase

<div class="@CombinedClass" role="menubar">
    @foreach (var menu in Menus)
    {
        <div class="menubar-menu">
            <button class="menubar-trigger @(ActiveMenu == menu.Id ? "active" : "")"
                    @onclick="() => ToggleMenu(menu.Id)"
                    role="menuitem"
                    aria-haspopup="true"
                    aria-expanded="@(ActiveMenu == menu.Id)">
                @menu.Label
            </button>
            
            @if (ActiveMenu == menu.Id)
            {
                <div class="menubar-content">
                    @menu.Content
                </div>
                
                <div class="menubar-backdrop" @onclick="CloseMenu"></div>
            }
        </div>
    }
</div>

@code {
    /// <summary>
    /// Represents a menu in the menubar.
    /// </summary>
    public class MenubarItem
    {
        /// <summary>
        /// Gets or sets the menu's ID.
        /// </summary>
        public string Id { get; set; }

        /// <summary>
        /// Gets or sets the menu's label.
        /// </summary>
        public string Label { get; set; }

        /// <summary>
        /// Gets or sets the menu's content.
        /// </summary>
        public RenderFragment Content { get; set; }
    }

    /// <summary>
    /// Gets or sets the list of menus.
    /// </summary>
    [Parameter]
    public List<MenubarItem> Menus { get; set; } = new List<MenubarItem>();

    /// <summary>
    /// Gets the component CSS class name.
    /// </summary>
    protected override string ComponentClass => "vibe-menubar";

    /// <summary>
    /// The ID of the active menu.
    /// </summary>
    private string ActiveMenu;

    /// <summary>
    /// Toggles a menu.
    /// </summary>
    /// <param name="menuId">The ID of the menu to toggle.</param>
    private void ToggleMenu(string menuId)
    {
        if (ActiveMenu == menuId)
        {
            ActiveMenu = null;
        }
        else
        {
            ActiveMenu = menuId;
        }
    }

    /// <summary>
    /// Closes the active menu.
    /// </summary>
    private void CloseMenu()
    {
        ActiveMenu = null;
    }
}
@using Vibe.UI.Themes.Models
@using Vibe.UI.Themes.Services
@inherits Vibe.UI.Base.ThemedComponentBase

<div class="@CombinedClass">
    <label for="theme-select" class="vibe-theme-select-label">@Label</label>
    <select id="theme-select" 
            class="vibe-theme-select" 
            @onchange="OnThemeChanged"
            value="@ThemeManager.CurrentTheme?.Id">
        @foreach (var theme in ThemeManager.AvailableThemes)
        {
            <option value="@theme.Id" selected="@(ThemeManager.CurrentTheme?.Id == theme.Id)">
                @theme.Name
            </option>
        }
    </select>
</div>

@code {
    /// <summary>
    /// Gets or sets the label for the theme selector
    /// </summary>
    [Parameter]
    public string Label { get; set; } = "Select theme:";

    /// <inheritdoc/>
    protected override string ComponentClass => "vibe-theme-selector";

    /// <summary>
    /// Handles theme selection change
    /// </summary>
    private async Task OnThemeChanged(ChangeEventArgs args)
    {
        string selectedThemeId = args.Value?.ToString();
        if (!string.IsNullOrEmpty(selectedThemeId))
        {
            await ThemeManager.SetThemeAsync(selectedThemeId);
        }
    }
}
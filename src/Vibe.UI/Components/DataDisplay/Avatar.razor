@namespace Vibe.UI.Components
@inherits Base.ThemedComponentBase

<div class="@CombinedClass @(Delayload ? "delayload" : string.Empty)" style="@AvatarStyle">
    @if (!string.IsNullOrEmpty(ImageUrl) && !HasImageError)
    {
        <img src="@ImageUrl" class="avatar-image" @onerror="HandleImageError" />
    }
    else if (!string.IsNullOrEmpty(Initials))
    {
        <div class="avatar-initials">@Initials</div>
    }
    else if (!string.IsNullOrEmpty(FallbackIcon))
    {
        <div class="avatar-icon">@FallbackIcon</div>
    }
    else
    {
        <div class="avatar-fallback"></div>
    }
</div>

@code {
    /// <summary>
    /// Gets or sets the URL for the avatar image.
    /// </summary>
    [Parameter]
    public string ImageUrl { get; set; }

    /// <summary>
    /// Gets or sets the initials to display when no image is available.
    /// </summary>
    [Parameter]
    public string Initials { get; set; }

    /// <summary>
    /// Gets or sets the fallback icon to display when no image or initials are available.
    /// </summary>
    [Parameter]
    public string FallbackIcon { get; set; }

    /// <summary>
    /// Gets or sets the size of the avatar in pixels.
    /// </summary>
    [Parameter]
    public int Size { get; set; } = 40;

    /// <summary>
    /// Gets or sets whether the avatar should have a delay in loading (for animation purposes).
    /// </summary>
    [Parameter]
    public bool Delayload { get; set; }

    /// <summary>
    /// Gets or sets the shape of the avatar (circle or square).
    /// </summary>
    [Parameter]
    public string Shape { get; set; } = "circle";

    /// <summary>
    /// Gets the component CSS class name.
    /// </summary>
    protected override string ComponentClass => "vibe-avatar";

    /// <summary>
    /// Flag to track if the image has an error.
    /// </summary>
    private bool HasImageError { get; set; }

    /// <summary>
    /// Gets the inline style for the avatar.
    /// </summary>
    private string AvatarStyle => $"width: {Size}px; height: {Size}px;";

    /// <summary>
    /// Handles errors when loading the avatar image.
    /// </summary>
    private void HandleImageError()
    {
        HasImageError = true;
        StateHasChanged();
    }
}
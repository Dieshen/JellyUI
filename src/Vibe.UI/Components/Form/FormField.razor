@namespace Vibe.UI.Components
@typeparam TValue
@inherits Base.ThemedComponentBase

<div class="@CombinedClass">
    <div class="form-field-container @ValidationClass">
        @if (!string.IsNullOrEmpty(Label))
        {
            <label class="form-field-label" for="@Id">@Label</label>
        }
        
        <div class="form-field-input">
            @ChildContent
        </div>
        
        @if (!string.IsNullOrEmpty(Description))
        {
            <div class="form-field-description">@Description</div>
        }
        
        <ValidationMessage For="@ValidationFor" class="form-validation-message" />
    </div>
</div>

@code {
    /// <summary>
    /// Gets or sets the field label.
    /// </summary>
    [Parameter]
    public string Label { get; set; }

    /// <summary>
    /// Gets or sets the field description.
    /// </summary>
    [Parameter]
    public string Description { get; set; }

    /// <summary>
    /// Gets or sets the field validation expression.
    /// </summary>
    [Parameter]
    public Expression<Func<TValue>> ValidationFor { get; set; }

    /// <summary>
    /// Gets or sets the field content.
    /// </summary>
    [Parameter]
    public RenderFragment ChildContent { get; set; }

    /// <summary>
    /// Gets or sets the field ID.
    /// </summary>
    [Parameter]
    public string Id { get; set; }

    /// <summary>
    /// Gets or sets whether the field has validation errors.
    /// </summary>
    [Parameter]
    public bool HasError { get; set; }

    /// <summary>
    /// Gets the component CSS class name.
    /// </summary>
    protected override string ComponentClass => "vibe-form-field";

    /// <summary>
    /// Gets the validation CSS class.
    /// </summary>
    private string ValidationClass => HasError ? "has-error" : "";

    /// <summary>
    /// Initialize the component.
    /// </summary>
    protected override void OnInitialized()
    {
        base.OnInitialized();
        
        if (string.IsNullOrEmpty(Id))
        {
            Id = "form-field-" + Guid.NewGuid().ToString("N");
        }
    }
}
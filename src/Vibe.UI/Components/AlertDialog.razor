@inherits VibeUI.Base.ThemedComponentBase

<div class="@CombinedClass" @attributes="AdditionalAttributes">
    <div class="vibe-alert-dialog-content">
        @if (Title != null)
        {
            <div class="vibe-alert-dialog-header">
                <h2 class="vibe-alert-dialog-title">@Title</h2>
                @if (Description != null)
                {
                    <p class="vibe-alert-dialog-description">@Description</p>
                }
            </div>
        }
        
        <div class="vibe-alert-dialog-body">
            @ChildContent
        </div>
        
        @if (Footer != null)
        {
            <div class="vibe-alert-dialog-footer">
                @Footer
            </div>
        }
        
        @if (CloseOnBackdropClick || ShowCloseButton)
        {
            <button class="vibe-alert-dialog-close" @onclick="OnCloseClicked" type="button" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        }
    </div>
    
    @if (IsOpen)
    {
        <div class="vibe-alert-dialog-backdrop" @onclick="OnBackdropClicked"></div>
    }
</div>

@code {
    /// <summary>
    /// Gets or sets the dialog content
    /// </summary>
    [Parameter]
    public RenderFragment ChildContent { get; set; }
    
    /// <summary>
    /// Gets or sets the dialog title
    /// </summary>
    [Parameter]
    public string Title { get; set; }
    
    /// <summary>
    /// Gets or sets the dialog description
    /// </summary>
    [Parameter]
    public string Description { get; set; }
    
    /// <summary>
    /// Gets or sets the dialog footer content
    /// </summary>
    [Parameter]
    public RenderFragment Footer { get; set; }
    
    /// <summary>
    /// Gets or sets whether the dialog is open
    /// </summary>
    [Parameter]
    public bool IsOpen { get; set; }
    
    /// <summary>
    /// Gets or sets whether to close the dialog when clicking on the backdrop
    /// </summary>
    [Parameter]
    public bool CloseOnBackdropClick { get; set; } = true;
    
    /// <summary>
    /// Gets or sets whether to show the close button
    /// </summary>
    [Parameter]
    public bool ShowCloseButton { get; set; } = true;
    
    /// <summary>
    /// Event callback when the dialog is closed
    /// </summary>
    [Parameter]
    public EventCallback<bool> IsOpenChanged { get; set; }
    
    /// <inheritdoc/>
    protected override string ComponentClass => "vibe-alert-dialog";
    
    private async Task OnCloseClicked()
    {
        await CloseDialog();
    }
    
    private async Task OnBackdropClicked()
    {
        if (CloseOnBackdropClick)
        {
            await CloseDialog();
        }
    }
    
    private async Task CloseDialog()
    {
        if (IsOpenChanged.HasDelegate)
        {
            await IsOpenChanged.InvokeAsync(false);
        }
    }
}